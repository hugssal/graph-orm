scalar Date

type User{
    idUser: ID!
    name: String!
    firstName: String!  
    lastName: String! 
    rolId: Int! 
    date: Date!
    active: Boolean!
}

type Query {
    users: [User!]
}

type Query {
    user (id:Int!) : User!
}

input NewUser{
    name: String!
    firstName: String!  
    lastName: String! 
    rolId: Int! 
}

type Mutation{
    createUser(input: NewUser!): User!
}

type Mutation{
    deleteUser(id: Int!): User!
}

input UpdateUs{
    id: Int!
    name: String
    firstName: String
    lastName: String
    rolId: Int
}

type Mutation{
    updateUser(input: UpdateUs): User!
}

type Mutation {
    login(input: String!): String!
}